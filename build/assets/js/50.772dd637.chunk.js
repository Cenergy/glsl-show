(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{595:function(n,e,o){"use strict";o.r(e),e.default="// Author @patriciogv ( patriciogonzalezvivo.com ) - 2015\n// Title: IChing series\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\nuniform vec2 dd_resolution;\nuniform float dd_time;\n\nfloat shape(vec2 st, float N){\n    st = st*2.-1.;\n    float a = atan(st.x,st.y)+PI;\n    float r = TWO_PI/N;\n    return abs(cos(floor(.5+a/r)*r-a)*length(st));\n}\n\nfloat box(vec2 st, vec2 size){\n    return shape(st*size,4.);\n}\n\nfloat rect(vec2 _st, vec2 _size){\n    _size = vec2(0.5)-_size*0.5;\n    vec2 uv = smoothstep(_size,_size+vec2(1e-4),_st);\n    uv *= smoothstep(_size,_size+vec2(1e-4),vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\nfloat hex(vec2 st, float a, float b, float c, float d, float e, float f){\n    st = st*vec2(2.,6.);\n\n    vec2 fpos = fract(st);\n    vec2 ipos = floor(st);\n\n    if (ipos.x == 1.0) fpos.x = 1.-fpos.x;\n    if (ipos.y < 1.0){\n        return mix(box(fpos, vec2(0.84,1.)),box(fpos-vec2(0.03,0.),vec2(1.)),a);\n    } else if (ipos.y < 2.0){\n        return mix(box(fpos, vec2(0.84,1.)),box(fpos-vec2(0.03,0.),vec2(1.)),b);\n    } else if (ipos.y < 3.0){\n        return mix(box(fpos, vec2(0.84,1.)),box(fpos-vec2(0.03,0.),vec2(1.)),c);\n    } else if (ipos.y < 4.0){\n        return mix(box(fpos, vec2(0.84,1.)),box(fpos-vec2(0.03,0.),vec2(1.)),d);\n    } else if (ipos.y < 5.0){\n        return mix(box(fpos, vec2(0.84,1.)),box(fpos-vec2(0.03,0.),vec2(1.)),e);\n    } else if (ipos.y < 6.0){\n        return mix(box(fpos, vec2(0.84,1.)),box(fpos-vec2(0.03,0.),vec2(1.)),f);\n    }\n    return 0.0;\n}\n\nfloat hex(vec2 st, float N){\n    float b[6];\n    float remain = floor(mod(N,64.));\n    for(int i = 0; i < 6; i++){\n        b[i] = 0.0;\n        b[i] = step(1.0,mod(remain,2.));\n        remain = ceil(remain/2.);\n    }\n    return hex(st,b[0],b[1],b[2],b[3],b[4],b[5]);\n}\n\nvoid main(){\n    vec2 st = gl_FragCoord.xy/dd_resolution.xy;\n    st.y *= dd_resolution.y/dd_resolution.x;\n\n    st *= 10.0;\n    vec2 fpos = fract(st);\n    vec2 ipos = floor(st);\n\n    float t = dd_time*5.0;\n    float df = 1.0;\n    df = hex(fpos,ipos.x+ipos.y+t)+(1.0-rect(fpos,vec2(0.7)));\n\n    gl_FragColor = vec4(mix(vec3(0.),vec3(1.),step(0.7,df)),1.0);\n}\n"}}]);